{
  "name": "json-csv",
  "version": "0.0.7",
  "description": "Export a richly structured, JSON array to CSV",
  "homepage": "https://github.com/IWSLLC/json-csv",
  "author": {
    "name": "Nathan Bridgewater",
    "email": "nathan@integratedwebsystems.com",
    "url": "http://integratedwebsystems.com/"
  },
  "keywords": [
    "csv",
    "export",
    "json"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:IWSLLC/json-csv.git"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "main": "./json-csv.js",
  "engines": {
    "node": "*"
  },
  "devDependencies": {
    "mocha": "latest",
    "should": "latest"
  },
  "bugs": {
    "url": "https://github.com/IWSLLC/json-csv/issues"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "scripts": {
    "test": "mocha"
  },
  "license": "BSD",
  "readme": "json-csv\n========\n\nSimple CSV export module that can export a rich JSON array of objects to CSV. \n\nUsage\n-----\n```\nvar csv = require('json-csv')\ncsv.toCSV(args, callback)\n\nvar callback = function(err,csv) {\n  //csv contains string of converted data in CSV format. \n}\n```\n\nArguments: \n```\n  {\n    //required: array of data\n    data : [],\n\n    //field definitions for CSV export\n    fields : \n    [\n      {\n        //required: field name for source value\n        name : 'string',\n\n        //required: column label for CSV header\n        label : 'string',\n\n        //optional: filter to tranfsorm value before exporting\n        filter : function(value) { return value; }\n      }\n    ]\n  }\n```\n\nExample\n-------\nSimple structure with basic CSV conversion. \n\n```\nvar csv = require('../json-csv')\nvar items = [\n  {\n    name : 'fred',\n    email : 'fred@somewhere',\n    amount : 1.02\n  },\n  {\n    name : 'jo',\n    email : 'jo@somewhere',\n    amount : 1.02\n  },\n  {\n    name : 'jo with a comma,',\n    email : 'jo@somewhere',\n    amount : 1.02\n  },\n  {\n    name : 'jo with a quote\"',\n    email : 'jo@somewhere',\n    amount : 1.02\n  }]\n\ncsv.toCSV({\n  data : items,\n  fields : [ \n    {\n        name : 'name',\n        label : 'Name',\n        quoted : true\n    },\n    {\n        name : 'email',\n        label : 'Email'\n    },\n    {\n        name : 'amount',\n        label : 'Amount'\n    }\n  ]},\n  function(err,csv) {\n    console.log(csv);\n  });\n```\n\nGenerates Output: \n``` output\nName,Email,Amount\n\"fred\",fred@somewhere,1.02\n\"jo\",jo@somewhere,1.02\n\"jo with a comma,\",jo@somewhere,1.02\n\"jo with a quote\"\"\",jo@somewhere,1.02\n```\n\nHere's a little more advanced sample that uses sub-structures and a filter for manipulating output for individual columns. \n\n```\nvar csv = require('json-csv')\nvar items = [\n  {\n    contact : {\n      company : 'Widgets, LLC',\n      name : 'John Doe',\n      email : 'john@widgets.somewhere'\n    },\n    registration : {\n      year : 2013,\n      level : 3\n    }\n  },\n  {\n    contact : {\n      company : 'Sprockets, LLC',\n      name : 'Jane Doe',\n      email : 'jane@sprockets.somewhere'\n    },\n    registration : {\n      year : 2013,\n      level : 2\n    }\n  }\n];\n\ncsv.toCSV({\n  data : items,\n  fields : [ \n    {\n      name : 'contact.company',\n      label : 'Company'\n    },\n    {\n      name : 'contact.name',\n      label : 'Name'\n    },\n    {\n      name : 'contact.email',\n      label : 'Email'\n    },\n    {\n      name : 'registration.year',\n      label : 'Year'\n    },\n    { \n      name : 'registration.level',\n      label : 'Level',\n      filter : function(value) {\n        switch(value) {\n          case 1 : return 'Test 1'\n          case 2 : return 'Test 2'\n          default : return 'Unknown'\n        }\n      }\n    }]\n  },\n  function(err,csv) {\n    console.log(csv);\n  });\n\n```\n\nGenerates Output: \n``` output\nCompany,Name,Email,Year,Level\n\"Widgets, LLC\",John Doe,john@widgets.somewhere,2013,Unknown\n\"Sprockets, LLC\",Jane Doe,jane@sprockets.somewhere,2013,Test 2\n```",
  "readmeFilename": "README.md",
  "_id": "json-csv@0.0.7",
  "dist": {
    "shasum": "1020cee8fdcfc233166337c0c5f580ce2068b7f2"
  },
  "_from": "json-csv@",
  "_resolved": "https://registry.npmjs.org/json-csv/-/json-csv-0.0.7.tgz"
}
